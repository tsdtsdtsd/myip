name: Deploy Images to GHCR

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    name: Run Go Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Run vet
        run: go vet ./...
      
      - name: Run tests
        run: go test ./... --cover

  version:
    name: Versioning
    runs-on: ubuntu-latest
    needs: [test]
    outputs:
      nextVersion: ${{ steps.version.outputs.nextVersion }}
      prereleaseVersion: ${{ steps.version.outputs.prereleaseVersion }}
      dockerNextVersion: ${{ steps.version.outputs.dockerNextVersion }}
      dockerPrereleaseVersion: ${{ steps.version.outputs.dockerPrereleaseVersion }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
          fetch-depth: 0

      - name: Determine next version
        uses: tsdtsdtsd/nextversion-action@main 
        id: nextversion
        with:
          prestable-mode: true

      - name: Set job outputs from nextversion step
        id: version
        run: |
          echo "nextVersion=${{ steps.nextversion.outputs.nextVersion }}" >> "$GITHUB_OUTPUT"
          echo "prereleaseVersion=${{ steps.nextversion.outputs.prereleaseVersion }}" >> "$GITHUB_OUTPUT"
          echo "dockerNextVersion=${{ steps.nextversion.outputs.nextVersionStrict }}" >> "$GITHUB_OUTPUT"
          echo "dockerPrereleaseVersion=$(echo "${{ steps.nextversion.outputs.prereleaseVersionStrict }}" | sed 's/\+/./g')" >> "$GITHUB_OUTPUT"

  build-push:
    name: Build & Push
    runs-on: ubuntu-latest
    needs: [version]
    permissions:
      packages: write
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ghcr.io/tsdtsdtsd/myip:${{ needs.version.outputs.dockerNextVersion }},ghcr.io/tsdtsdtsd/myip:latest
      
  git-tag-version:
    runs-on: ubuntu-latest
    name: Version tag and release
    needs: [version, build-push]
    permissions: 
      actions: write
      contents: write
      id-token: write
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Create new version tag
      run: |
        git config --global user.name "${GITHUB_ACTOR}"
        git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
        git tag -a -m "Release ${{ needs.version.outputs.nextVersion }}" ${{ needs.version.outputs.nextVersion }}
        git push origin ${{ needs.version.outputs.nextVersion }}

    # - name: Create release
    #   env:
    #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   run: |
        
    #     gh release create ${{ needs.version.outputs.nextVersion }} \
    #       --latest \
    #       --generate-notes \
    #       --verify-tag \
    #       --target ${{ github.sha }} \
    #       --title "Release ${{ needs.version.outputs.nextVersion }}"

    #     echo "### Release (production) :earth_americas:" >> "$GITHUB_STEP_SUMMARY"
    #     echo "Released and deployed ${{ needs.version.outputs.nextVersion }} to production" >> "$GITHUB_STEP_SUMMARY"